name: PyInstaller

on: [release]

jobs:
  build-unix:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install motion tracking
      env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.MOTION_TRACKING }}"
        python -m pip install --upgrade pip
        git clone git@github.com:ComputationalPhysiology/mps_motion_tracking.git
        cd mps_motion_tracking && python -m pip install .[all] && cd ..
    - name: pyinstaller
      run: |
        make installer
    - name: Upload installer files
      uses: actions/upload-artifact@v2
      with:
        name: mps-binary-${{ matrix.python-version }}-${{ matrix.os }}
        path: dist/*
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install motion tracking
      env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.MOTION_TRACKING }}"
        python -m pip install --upgrade pip
        git clone git@github.com:ComputationalPhysiology/mps_motion_tracking.git
        cd mps_motion_tracking && python -m pip install .[all] && cd ..
    - name: pyinstaller
      run: |
        make installer-windows
    - name: Upload installer files
      uses: actions/upload-artifact@v2
      with:
        name: mps-binary-${{ matrix.python-version }}-windows-latest
        path: dist/*
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
